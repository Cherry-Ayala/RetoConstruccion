{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\RetoConstruccion\\\\src\\\\Componentes\\\\Doctor\\\\Doctor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Doctor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  sql,\n  poolPromise\n} = require('../database/db');\nfunction Cuentas() {\n  _s();\n  const [pacientes, setPacientes] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  //useEffect(() => {\n  //    fetchPacientes();\n  // }, []);\n\n  const fetchPacientes = async () => {\n    try {\n      //const response = await axios.get('/api/getPaciente/:Id_Paciente')\n      /*const pool = await poolPromise\r\n      const result = await pool.request()\r\n      .input('Id_Paciente',sql.Int, req.params.Id_Paciente)\r\n      .query(\"select * from [dbo].[Pacientes] where Id_Paciente = @Id_Paciente\")\r\n      res.json(result.recordset)\r\n      } catch (error) {\r\n      res.status(500)\r\n      res.send(error.message)\r\n      }*/\n      //    setPacientes(response.data)\n    } catch (error) {\n      console.error('error', error);\n    }\n  };\n\n  /* const handleSearchChange = (event) => {\r\n       setSearchQuery(event.target.value);\r\n   };\r\n   const filteredPacientes = pacientes.filter((pacientes) => {\r\n       const {id, nombre} = pacientes\r\n       const lowerCaseSearchQuery = searchQuery.toLowerCase();\r\n       return id.toString().includes(lowerCaseSearchQuery) || nombre.toLowerCase().includes(lowerCaseSearchQuery);\r\n   });*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cuentas\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      className: \"search\",\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: filteredPacientes.map(pacientes => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listItem\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/patient-detail/${pacientes.id}`,\n          children: [pacientes.nombre, \" \", pacientes.apellido]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, pacientes.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Cuentas, \"2Q8wd03+qb/vG3LfeqTe73hOX5U=\");\n_c = Cuentas;\nexport default Cuentas;\nvar _c;\n$RefreshReg$(_c, \"Cuentas\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","sql","poolPromise","require","Cuentas","_s","pacientes","setPacientes","searchQuery","setSearchQuery","fetchPacientes","error","console","className","children","type","placeholder","onChange","handleSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","filteredPacientes","map","to","id","nombre","apellido","_c","$RefreshReg$"],"sources":["C:/Users/adria/Documents/GitHub/RetoConstruccion/src/Componentes/Doctor/Doctor.jsx"],"sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './Doctor.css'\r\nconst { sql,poolPromise } = require('../database/db')\r\n\r\n\r\nfunction Cuentas(){\r\n    const [pacientes, setPacientes] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    //useEffect(() => {\r\n    //    fetchPacientes();\r\n   // }, []);\r\n\r\n    const fetchPacientes = async () => {\r\n        try{\r\n            //const response = await axios.get('/api/getPaciente/:Id_Paciente')\r\n            /*const pool = await poolPromise\r\n            const result = await pool.request()\r\n            .input('Id_Paciente',sql.Int, req.params.Id_Paciente)\r\n            .query(\"select * from [dbo].[Pacientes] where Id_Paciente = @Id_Paciente\")\r\n            res.json(result.recordset)\r\n        } catch (error) {\r\n            res.status(500)\r\n            res.send(error.message)\r\n        }*/\r\n        //    setPacientes(response.data)\r\n        } catch (error){\r\n            console.error('error', error);\r\n        }\r\n    };\r\n\r\n   /* const handleSearchChange = (event) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n    const filteredPacientes = pacientes.filter((pacientes) => {\r\n        const {id, nombre} = pacientes\r\n        const lowerCaseSearchQuery = searchQuery.toLowerCase();\r\n        return id.toString().includes(lowerCaseSearchQuery) || nombre.toLowerCase().includes(lowerCaseSearchQuery);\r\n    });*/\r\n\r\n    return (\r\n    <div className='Cuentas'>\r\n        <input type=\"text\" placeholder='Search...' className=\"search\" onChange={handleSearchChange} />\r\n        <ul className='list'>\r\n            {filteredPacientes.map((pacientes) => (\r\n            <li key={pacientes.id} className='listItem'>\r\n                <Link to={`/patient-detail/${pacientes.id}`}>{pacientes.nombre} {pacientes.apellido}</Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Cuentas; "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACrB,MAAM;EAAEC,GAAG;EAACC;AAAY,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAGrD,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA;EACD;;EAEC,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAG;MACC;MACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACQ;IAAA,CACC,CAAC,OAAOC,KAAK,EAAC;MACXC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IACjC;EACJ,CAAC;;EAEF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACAX,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACH,SAAS,EAAC,QAAQ;MAACI,QAAQ,EAAEC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9FtB,OAAA;MAAIa,SAAS,EAAC,MAAM;MAAAC,QAAA,EACfS,iBAAiB,CAACC,GAAG,CAAElB,SAAS,iBACjCN,OAAA;QAAuBa,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvCd,OAAA,CAACF,IAAI;UAAC2B,EAAE,EAAG,mBAAkBnB,SAAS,CAACoB,EAAG,EAAE;UAAAZ,QAAA,GAAER,SAAS,CAACqB,MAAM,EAAC,GAAC,EAACrB,SAAS,CAACsB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADtFhB,SAAS,CAACoB,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjB,EAAA,CA/CQD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAiDhB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}